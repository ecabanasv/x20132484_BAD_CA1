import * as t from "io-ts";
import * as Format from "../format";
import { WrapOptions } from "./types";
export declare const BooleanFromNumber: t.Type<boolean, number, unknown>;
export declare const BooleanFromString: t.Type<boolean, string, unknown>;
export declare const UnboxedBoolean: t.Type<boolean, Boolean, unknown>;
export declare const UnboxedString: t.Type<string, String, unknown>;
export declare const UnboxedNumber: t.Type<number, Number, unknown>;
export declare const Bool: t.UnionC<[t.BooleanC, t.Type<boolean, string, unknown>, t.Type<boolean, number, unknown>, t.Type<boolean, Boolean, unknown>, t.Type<boolean, String, unknown>, t.Type<boolean, Number, unknown>]>;
export declare const wrapBool: (dataType: Format.Types.BoolType, input: unknown, _options?: WrapOptions) => import("fp-ts/lib/Either").Either<t.Errors, Format.Values.BoolValue>;
